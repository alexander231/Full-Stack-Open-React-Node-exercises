{"version":3,"sources":["services/numbersService.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","persons","filterByName","filteredPersons","filter","person","name","toLowerCase","includes","map","Person","text","handleClick","phoneNumber","Form","addPerson","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","onSubmit","value","onChange","type","Button1","onClick","Notification","message","className","App","useState","messageToShow","setMessageToShow","errorMessage","setErrorMessage","setPersons","setNewName","setNewPhoneNumber","setFilterByName","useEffect","numbersService","then","response","data","event","target","preventDefault","length","personObject","some","window","alert","personToUpdate","confirm","setTimeout","console","log","concat","selectedPerson","catch","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c8d73d7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://powerful-shelf-74843.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\nconst deleteById = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\nexport default {\n  getAll, \n  create, \n  update,\n  deleteById\n}","import React, { useState, useEffect } from 'react'\nimport numbersService from './services/numbersService'\nimport './index.css'\n\nconst Filter = ({persons, filterByName}) => {\n \n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filterByName.toLowerCase()))\n \n  if (!(filterByName === '') && filteredPersons !== 0) {\n    \n    return (\n     \n       filteredPersons.map(person => <Person key = {person.id} person = {person}/>)\n    \n    )\n  }\n  \n  else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nconst Person = ({person, text, handleClick}) => {\n  return (\n    <div>\n      <li>\n        {person.name}: {person.phoneNumber} {text && (<Button1 id = {person.id} text = {text} handleClick = {handleClick}/>)}\n      </li>\n    </div>\n  )\n \n}\nconst Form = ({addPerson, newName, handleNameChange, newPhoneNumber, handlePhoneNumberChange}) => {\n  return (\n    <form onSubmit = {addPerson}>\n\n        <div>\n\n          name: <input value = {newName} onChange = {handleNameChange} />\n\n        </div>\n\n        <div>\n\n          phone number: <input value = {newPhoneNumber} onChange = {handlePhoneNumberChange}/>\n\n        </div>\n\n        <div>\n\n          <button type = \"submit\"> add </button>\n\n        </div>\n      </form>\n  )\n}\nconst Button1 = ({id, text, handleClick}) => {\n\n  return (\n    <button id = {id} onClick = {handleClick}>\n      {text}\n    </button>\n  )\n}\nconst Notification = ({message, type}) => {\n  if (message === null) {\n    return null\n  }\n  return(\n    <div className = {type}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  /*const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas',\n      phoneNumber: '072233',\n      id: 0 \n    },\n    { name: 'Dan Abramov',\n      phoneNumber: '07332233',\n      id: 1 \n    },\n    { name: 'Mary Poppendieck',\n      phoneNumber: '0372233',\n      id: 2 \n    }\n  ]) */\n  const [ messageToShow, setMessageToShow] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState('')\n  const [ filterByName, setFilterByName ] = useState('')\n\n  useEffect(() => {\n    numbersService\n    .getAll()\n      .then(response => {\n        \n        setPersons(response.data);\n      })\n\n  }, [])\n\n  const addPerson = (event) =>  {\n    event.preventDefault();\n    let id;\n    if (persons.length === 0) id = 0\n    else id = persons[persons.length - 1].id + 1\n    const personObject = {\n      name: newName,\n      phoneNumber: newPhoneNumber,\n      id\n    };\n    if (persons.some(person => person.phoneNumber === personObject.phoneNumber)) {\n\n      window.alert(newPhoneNumber + ' is already added to phonebook');   \n    }\n    else if(persons.some(person => person.name === personObject.name)){\n      const personToUpdate = persons.filter(person => person.name === personObject.name)\n      if (window.confirm(`${personToUpdate[0].name} is already in the phonebook, replace the old number with the new one?`)) {\n\n        numbersService\n          .update(personToUpdate[0].id, {...personObject, id:personToUpdate[0].id})\n            .then(response => {\n              setPersons(persons.map(person => person.id !== personToUpdate[0].id ? person : response.data))\n              setNewName('');\n              setNewPhoneNumber('');\n              setMessageToShow(\n                `${response.data.name} was added successfully`\n              );\n              setTimeout(() => {\n                setMessageToShow(null)\n              }, 5000)\n            \n              \n            })\n      }\n    }\n    else {\n      numbersService\n        .create(personObject)\n          .then(response => { \n            console.log('x')\n            setPersons(persons.concat(response.data))\n            setNewName('');\n            setNewPhoneNumber('');\n            setMessageToShow(\n              `${response.data.name} was added successfully`\n            );\n            setTimeout(() => {\n              setMessageToShow(null)\n            }, 5000)\n          })\n    }\n    \n  }\n  const deletePerson = (id) => {\n    const selectedPerson = persons.filter(person => person.id === id)\n    if (window.confirm(`Are you sure you want to delete ${selectedPerson[0].name}?`)) {\n    numbersService\n      .deleteById(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(() => {\n          setErrorMessage(\n            `${selectedPerson[0].name} was already deleted`\n          );\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n  const handleNameChange = (event) => {\n    \n    setNewName(event.target.value);\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    \n    setNewPhoneNumber(event.target.value);\n\n  }\n  const handleFilterByNameChange = (event) => {\n    \n    setFilterByName(event.target.value);\n  }\n  \n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n      <Notification message = {messageToShow} type = \"message\"/>\n      <Notification message = {errorMessage} type = \"error\"/>\n\n        filter shown with <input value = {filterByName} onChange = {handleFilterByNameChange} />\n\n      <ul>\n\n        <Filter persons = {persons} filterByName = {filterByName}/>\n\n      </ul>\n\n      <h2>Add a new person</h2>\n\n        <Form addPerson = {addPerson} newName = {newName} handleNameChange = {handleNameChange} newPhoneNumber = {newPhoneNumber} handlePhoneNumberChange = {handlePhoneNumberChange}/>\n    \n      <h2>Numbers</h2>\n\n      <ul>\n        {persons.map( person => <Person key = {person.id} person = {person} text = \"delete\" handleClick = {() => deletePerson(person.id)} />)}\n      </ul>\n     \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}